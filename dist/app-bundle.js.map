{"version":3,"sources":["src/base-worker-page.html.js","src/base-worker-page.js","src/base-worker-page.ts","__stub__/ext-css.js","src/main.js","src/main.ts","src/missing-page.html.js","src/missing-page.js","src/missing-page.ts","src/my-app.scss","src/my-app.css","src/my-app.html.js","src/my-app.js","src/my-app.ts","src/state-service.js","src/state-service.ts","src/treasury-page.html.js","src/treasury-page.js","src/treasury-page.ts","src/worker-page.html.js","src/worker-page.js","src/worker-page.ts"],"names":["name","template","dependencies","_e","register","container","CustomElement","define","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","BaseWorkerPage","constructor","state","load","parameters","_a","id","Number","base","bases","inject","StateService","__au2ViewDef","Aurelia","RouterConfiguration","app","MyApp","start","MissingPage","enter","missingComponent","d1","d2","d3","Registration","defer","d0","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Factor","dayProduceDefault","farmerMaxFromFarm","foodConsumeFromPopulation","foodProduceFromFarmer","populationMaxFromHouse","populationProduceDefault","woodProduceFromLogger","State","resources","recursiveResources","reset","delta","resource","_b","produceKey","produce","consumeKey","consume","update","maxKey","max","Infinity","minKey","min","newValue","Math","turn","forEach","recursiveResource","initResource","init","_c","_d","_f","_g","_h","_j","_k","valueKey","valueKeyDefault","produceKeyDefault","consumeKeyDefault","maxKeyDefault","minKeyDefault","deltaKey","hasGetter","get","value","dayProduce","Base","enabled","filter","sumFromBase","mapper","map","reduce","sum","current","population","foodConsume","logger","woodProduce","farmer","foodProduce","farm","house","loggerMax","initState","populationMax","populationProduce","food","foodMin","populationFull","ceil","worker","farmerMax","assign","job","workerMin","unassign","TreasuryPage","WorkerPage"],"mappings":";AAAA,MAAA,mFAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;AAJlF,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AACO,KAAA,CAAMA,IAAI,CAAA,CAAA,CAAG,kBAAb,CAAA;AAQP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAPb,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,ovDAAjB,CAAA;AASP,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,GAAG,CAAC,QAAQ,CAAC,CAAC,CATCA,QASQ,CAAC;AACxB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AATpB,KAAA,CAAMC,YAAY,CAAA,CAAA,CAAG,CAAA,CAArB,CAAA;AAWP,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AAVpC,GAAA,CAAIC,EAAJ,CAAA;AAAA;AACO,QAAA,CAASC,QAAT,CAAkBC,SAAlB,CAAA,CAA6B,CAAA;AAAA,EAClC,EAAA,CAAA,CAAI,CAACF,EAAL,CAAA,CAAS,CAAA;AAAA,IACPA,EAAE,CAAA,CAAA,CAAGG,YAAAA,CAAAA,aAAAA,CAAcC,MAAd,CAAqB,CAAA;AAAA,MAAEP,IAAF,CAAA;AAAA,MAAQC,QAAR,CAAA;AAAA,MAAkBC,YAAAA;AAAAA,IAAlB,CAArB,CAAL,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EACDG,SAAS,CAACD,QAAV,CAAmBD,EAAnB,CAAA,CAAA;AACD,CAAA;AAAA,CAAA,CAAA,CAAA;;ACXD,MAAA,0HAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;ACHhC,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AAEA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAAA;ADSA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAbvuB,GAAA,CAAIK,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,UAAV,CAAA,CAAsBC,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCC,IAAnC,CAAA,CAAyC,CAAA;AAAA,EACnF,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAGC,SAAS,CAACC,MAAlB,CAAA;AAAA,MAA0BC,CAAC,CAAA,CAAA,CAAGH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQH,MAAR,CAAA,CAAA,CAAiBE,IAAI,CAAA,GAAA,CAAK,IAAT,CAAA,CAAA,CAAgBA,IAAI,CAAA,CAAA,CAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,CAAA,CAAwCC,GAAxC,CAAvB,CAAA,CAAA,CAAsEC,IAArH,CAAA;AAAA,MAA2HO,CAA3H,CAAA;AAAA,EACA,EAAA,CAAA,CAAI,MAAA,CAAOC,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACC,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2EL,CAAC,CAAA,CAAA,CAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,CAAA,CAA6BC,MAA7B,CAAA,CAAqCC,GAArC,CAAA,CAA0CC,IAA1C,CAAJ,CAA3E,IAAA,CACK,GAAA,CAAA,CAAK,GAAA,CAAIU,CAAC,CAAA,CAAA,CAAGb,UAAU,CAACM,MAAX,CAAA,CAAA,CAAoB,CAAjC,CAAA,CAAoCO,CAAC,CAAA,EAAA,CAAI,CAAzC,CAAA,CAA4CA,CAAC,EAA7C,CAAA,CAAiD,EAAA,CAAA,CAAIH,CAAC,CAAA,CAAA,CAAGV,UAAU,CAACa,CAAD,CAAlB,CAAA,CAAuBN,CAAC,CAAA,CAAA,CAAG,CAACH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACH,CAAD,CAAT,CAAA,CAAA,CAAeH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAAA,CAAcK,CAAd,CAAT,CAAA,CAAA,CAA4BG,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAA7C,CAAA,CAAA,EAAA,CAA+DK,CAAnE,CAAA;AAAA,EAC7E,MAAA,CAAOH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,EAAA,CAASG,CAAT,CAAA,EAAA,CAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCK,CAAnC,CAAd,CAAA,CAAqDA,CAA5D,CAAA;AACH,CALD,CAAA;AAAA;AAMA,GAAA,CAAIQ,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAgB,CAAA;AAAA,EAC1D,EAAA,CAAA,CAAI,MAAA,CAAON,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACO,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2E,MAAA,CAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,CAAA,CAAoBC,CAApB,CAAP,CAAA;AAC9E,CAFD,CAAA;AAAA;ACFA,GAAA,CAAaE,cAAc,CAAA,CAAA,CAA3B,KAAA,CAAaA,cAAb,CAA2B,CAAA;AAAA,EASzBC,WAAA,CAAYC,KAAZ,CAAA,CAA+B,CAAA;AAAA,IAC7B,IAAA,CAAKA,KAAL,CAAA,CAAA,CAAaA,KAAb,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEMC,IAAI,CAACC,UAAD,CAAA,CAAW,CAAA;AAAA,IDAhB,GAAA,CAAIC,EAAJ,CAAA;AAAA;AAAA,ICCJ,IAAA,CAAKC,EAAL,CAAA,CAAA,CAAUC,MAAM,CAAA,CAAAF,EAAA,CAAA,CAAA,CAACD,UAAU,CAACE,EAAZ,CAAA,CAAA,GAAA,CAAc,IAAd,CAAA,EAAA,CAAcD,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAd,CAAA,CAAA,CAAcA,EAAd,CAAA,CAAA,CAAkB,CAAlB,CAAhB,CAAA;AAAA,IACA,IAAA,CAAKG,IAAL,CAAA,CAAA,CAAY,IAAA,CAAKN,KAAL,CAAWO,KAAX,CAAiB,CAAjB,CAAZ,CAAA;AAAA,EACD,CAAA;AAAA;AAhBwB,CAA3B,CAAA;ADoCA,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC;ACnCfT,cAAA,CAAAU,MAAA,CAAA,CAAA,CAAS,CAACC,aAAAA,CAAAA,YAAD,CAAT,CAAA;AAETX,cAAA,CAAAI,UAAA,CAAA,CAAA,CAAa,CAAC,IAAD,CAAb,CAAA;AAHH,OAAA,CAAA,cAAA,CAAA,CAAA,CAAAJ,cAAc,CAAA,CAAA,CAAApB,UAAA,CAAA,CAF0B,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAAgC,YAAA,CAE1B,CAAA,CDsBvBhB,UAAU,CAAC,mBAAD,CAAA,CAAsB,CCbfe,aAAAA,CAAAA,YDae,CAAtB,CCtBa,CAAA,CAAA,CAAdX,cAAc,CAAd,CAAA;AAAA,CAAA,CAAA,CAAA;;ACJb,MAAM,WAAC,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;ACAxD,MAAA,+DAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;ACAb,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AAAA;AACA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AAAA;ADKA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;ACLvuBa,QAAAA,CAAAA,OAAAA,CACGrC,QADH,CACYsC,QAAAA,CAAAA,mBADZ,CAAA,CAEE,0EAAA;AACA,4BAAA;AACA,0EAAA;AAJF,CAKGC,GALH,CAKOC,MAAAA,CAAAA,KALP,CAAA,CAMGC,KANH,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA,CAAA;;ACHA,MAAA,+EAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;AAJlF,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AACO,KAAA,CAAM7C,IAAI,CAAA,CAAA,CAAG,cAAb,CAAA;AAQP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAPb,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,uDAAjB,CAAA;AASP,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,GAAG,CAAC,QAAQ,CAAC,CAAC,CATCA,QASQ,CAAC;AACxB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AATpB,KAAA,CAAMC,YAAY,CAAA,CAAA,CAAG,CAAA,CAArB,CAAA;AAWP,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AAVpC,GAAA,CAAIC,EAAJ,CAAA;AAAA;AACO,QAAA,CAASC,QAAT,CAAkBC,SAAlB,CAAA,CAA6B,CAAA;AAAA,EAClC,EAAA,CAAA,CAAI,CAACF,EAAL,CAAA,CAAS,CAAA;AAAA,IACPA,EAAE,CAAA,CAAA,CAAGG,YAAAA,CAAAA,aAAAA,CAAcC,MAAd,CAAqB,CAAA;AAAA,MAAEP,IAAF,CAAA;AAAA,MAAQC,QAAR,CAAA;AAAA,MAAkBC,YAAAA;AAAAA,IAAlB,CAArB,CAAL,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EACDG,SAAS,CAACD,QAAV,CAAmBD,EAAnB,CAAA,CAAA;AACD,CAAA;AAAA,CAAA,CAAA,CAAA;;ACXD,MAAA,gGAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;ACH7B,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;ADSA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAXvuB,GAAA,CAAIK,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,UAAV,CAAA,CAAsBC,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCC,IAAnC,CAAA,CAAyC,CAAA;AAAA,EACnF,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAGC,SAAS,CAACC,MAAlB,CAAA;AAAA,MAA0BC,CAAC,CAAA,CAAA,CAAGH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQH,MAAR,CAAA,CAAA,CAAiBE,IAAI,CAAA,GAAA,CAAK,IAAT,CAAA,CAAA,CAAgBA,IAAI,CAAA,CAAA,CAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,CAAA,CAAwCC,GAAxC,CAAvB,CAAA,CAAA,CAAsEC,IAArH,CAAA;AAAA,MAA2HO,CAA3H,CAAA;AAAA,EACA,EAAA,CAAA,CAAI,MAAA,CAAOC,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACC,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2EL,CAAC,CAAA,CAAA,CAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,CAAA,CAA6BC,MAA7B,CAAA,CAAqCC,GAArC,CAAA,CAA0CC,IAA1C,CAAJ,CAA3E,IAAA,CACK,GAAA,CAAA,CAAK,GAAA,CAAIU,CAAC,CAAA,CAAA,CAAGb,UAAU,CAACM,MAAX,CAAA,CAAA,CAAoB,CAAjC,CAAA,CAAoCO,CAAC,CAAA,EAAA,CAAI,CAAzC,CAAA,CAA4CA,CAAC,EAA7C,CAAA,CAAiD,EAAA,CAAA,CAAIH,CAAC,CAAA,CAAA,CAAGV,UAAU,CAACa,CAAD,CAAlB,CAAA,CAAuBN,CAAC,CAAA,CAAA,CAAG,CAACH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACH,CAAD,CAAT,CAAA,CAAA,CAAeH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAAA,CAAcK,CAAd,CAAT,CAAA,CAAA,CAA4BG,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAA7C,CAAA,CAAA,EAAA,CAA+DK,CAAnE,CAAA;AAAA,EAC7E,MAAA,CAAOH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,EAAA,CAASG,CAAT,CAAA,EAAA,CAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCK,CAAnC,CAAd,CAAA,CAAqDA,CAA5D,CAAA;AACH,CALD,CAAA;AAAA;ACAA,GAAA,CAAa8B,WAAW,CAAA,CAAA,CAAxB,KAAA,CAAaA,WAAb,CAAwB,CAAA;AAAA,EAIfC,KAAK,CAACf,UAAD,CAAA,CAAyB,CAAA;AAAA,IACnC,IAAA,CAAKgB,gBAAL,CAAA,CAAA,CAAwBhB,UAAU,CAACE,EAAnC,CAAA;AAAA,EACD,CAAA;AAAA;AANqB,CAAxB,CAAA;AD2BA,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC;AC1BlBY,WAAA,CAAAd,UAAA,CAAA,CAAA,CAAa,CAAC,IAAD,CAAb,CAAA;AADH,OAAA,CAAA,WAAA,CAAA,CAAA,CAAAc,WAAW,CAAA,CAAA,CAAAtC,UAAA,CAAA,CAAxB,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAAgC,YAAA,CAAwB,CAAA,CAAA,CAAXM,WAAW,CAAX,CAAA;AAAA,CAAA,CAAA,CAAA;;ACAb;AEAA,EFCE,IEDF,YFCE,iJEDF,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,EFEE,UEFU,CAAC,EFEX;ACCF,ACHa;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,AFEA,OEFO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,EFEE,KEFK,CAAC,OFEN,KEFkB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA,EFGhF,qBAAA;AEPF,EFQE,CERF,CAAA,UFQE,EERF,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;ADSA,ACTA;AACA,AFSE,GETF,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAAA,EFUI,0BAAA;ACCJ,ACVA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA;AAAA;AACA,AFYA,GEZA,CAAA,EAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,EFaE,2BAAA;ACAF,ACZA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA,CAAA;AAAA;AACA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AAAA;AAaA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAEvuB,QAAQ,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA;AAhBxF,KAAA,CAAM9C,IAAI,CAAA,CAAA,CAAG,QAAb,CAAA;AAmBP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAlBb,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,qhBAAjB,CAAA;AAoBP,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,GAAG,CAAC,QAAQ,CAAC,CAAC,CApBCA,QAoBQ,CAAC;AACxB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AApBpB,KAAA,CAAMC,YAAY,CAAA,CAAA,CAAG,CAAE+C,EAAF,CAAA,CAAMC,EAAN,CAAA,CAAUC,EAAV,CAAA,CAAcC,OAAAA,CAAAA,YAAAA,CAAaC,KAAb,CAAmB,MAAnB,CAAA,CAA2BC,MAAAA,CAAAA,OAA3B,CAAd,CAArB,CAAA;AAsBP,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AArBpC,GAAA,CAAInD,EAAJ,CAAA;AAAA;AACO,QAAA,CAASC,QAAT,CAAkBC,SAAlB,CAAA,CAA6B,CAAA;AAAA,EAClC,EAAA,CAAA,CAAI,CAACF,EAAL,CAAA,CAAS,CAAA;AAAA,IACPA,EAAE,CAAA,CAAA,CAAGG,YAAAA,CAAAA,aAAAA,CAAcC,MAAd,CAAqB,CAAA;AAAA,MAAEP,IAAF,CAAA;AAAA,MAAQC,QAAR,CAAA;AAAA,MAAkBC,YAAAA;AAAAA,IAAlB,CAArB,CAAL,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EACDG,SAAS,CAACD,QAAV,CAAmBD,EAAnB,CAAA,CAAA;AACD,CAAA;AAAA,CAAA,CAAA,CAAA;;AChBD,MAAA,sGAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;ACHvB,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAAA;ADWA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAbvuB,GAAA,CAAIK,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,UAAV,CAAA,CAAsBC,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCC,IAAnC,CAAA,CAAyC,CAAA;AAAA,EACnF,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAGC,SAAS,CAACC,MAAlB,CAAA;AAAA,MAA0BC,CAAC,CAAA,CAAA,CAAGH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQH,MAAR,CAAA,CAAA,CAAiBE,IAAI,CAAA,GAAA,CAAK,IAAT,CAAA,CAAA,CAAgBA,IAAI,CAAA,CAAA,CAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,CAAA,CAAwCC,GAAxC,CAAvB,CAAA,CAAA,CAAsEC,IAArH,CAAA;AAAA,MAA2HO,CAA3H,CAAA;AAAA,EACA,EAAA,CAAA,CAAI,MAAA,CAAOC,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACC,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2EL,CAAC,CAAA,CAAA,CAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,CAAA,CAA6BC,MAA7B,CAAA,CAAqCC,GAArC,CAAA,CAA0CC,IAA1C,CAAJ,CAA3E,IAAA,CACK,GAAA,CAAA,CAAK,GAAA,CAAIU,CAAC,CAAA,CAAA,CAAGb,UAAU,CAACM,MAAX,CAAA,CAAA,CAAoB,CAAjC,CAAA,CAAoCO,CAAC,CAAA,EAAA,CAAI,CAAzC,CAAA,CAA4CA,CAAC,EAA7C,CAAA,CAAiD,EAAA,CAAA,CAAIH,CAAC,CAAA,CAAA,CAAGV,UAAU,CAACa,CAAD,CAAlB,CAAA,CAAuBN,CAAC,CAAA,CAAA,CAAG,CAACH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACH,CAAD,CAAT,CAAA,CAAA,CAAeH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAAA,CAAcK,CAAd,CAAT,CAAA,CAAA,CAA4BG,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAA7C,CAAA,CAAA,EAAA,CAA+DK,CAAnE,CAAA;AAAA,EAC7E,MAAA,CAAOH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,EAAA,CAASG,CAAT,CAAA,EAAA,CAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCK,CAAnC,CAAd,CAAA,CAAqDA,CAA5D,CAAA;AACH,CALD,CAAA;AAAA;AAMA,GAAA,CAAIQ,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAgB,CAAA;AAAA,EAC1D,EAAA,CAAA,CAAI,MAAA,CAAON,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACO,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2E,MAAA,CAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,CAAA,CAAoBC,CAApB,CAAP,CAAA;AAC9E,CAFD,CAAA;AAAA;ACJA,GAAA,CAAakB,KAAK,CAAA,CAAA,CAAlB,KAAA,CAAaA,KAAb,CAAkB,CAAA;AAAA,EAGhBf,WAAA,CAAYC,KAAZ,CAAA,CAA+B,CAAA;AAAA,IAC7B,IAAA,CAAKA,KAAL,CAAA,CAAA,CAAaA,KAAb,CAAA;AAAA,EACD,CAAA;AAAA;AALe,CAAlB,CAAA;AD+BA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;AC9BGc,KAAA,CAAAN,MAAA,CAAA,CAAA,CAAS,CAACC,aAAAA,CAAAA,YAAD,CAAT,CAAA;AADZ,OAAA,CAAA,KAAA,CAAA,CAAA,CAAAK,KAAK,CAAA,CAAA,CAAApC,UAAA,CAAA,CAF6B,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAAgC,YAAA,CAE7B,CAAA,CDkBdhB,UAAU,CAAC,mBAAD,CAAA,CAAsB,CCffe,aAAAA,CAAAA,YDee,CAAtB,CClBI,CAAA,CAAA,CAALK,KAAK,CAAL,CAAA;AAAA,CAAA,CAAA,CAAA;;ACFb,MAAA,mDAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;AAH9E,GAAA,CAAIW,MAAM,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,MAAd,CAAA,EAAA,CAAyB,QAAA,CAAA,CAAUC,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAgB,CAAA;AAAA,EAClD,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAG,CAAA,CAAR,CAAA;AAAA;AAAA,EACA,GAAA,CAAA,CAAK,GAAA,CAAIC,CAAT,CAAA,EAAA,CAAcH,CAAd,CAAA,CAAiB,EAAA,CAAA,CAAIvC,MAAM,CAAC2C,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,CAArC,CAAA,CAAwCG,CAAxC,CAAA,CAAA,EAAA,CAA8CF,CAAC,CAACM,OAAF,CAAUJ,CAAV,CAAA,CAAA,CAAA,CAAe,CAAjE,CAAA,CACbD,CAAC,CAACC,CAAD,CAAD,CAAA,CAAA,CAAOH,CAAC,CAACG,CAAD,CAAR,CAAA;AAAA;AAAA,EACJ,EAAA,CAAA,CAAIH,CAAC,CAAA,EAAA,CAAI,IAAL,CAAA,EAAA,CAAa,MAAA,CAAOvC,MAAM,CAAC+C,qBAAd,CAAA,GAAA,CAAwC,UAAzD,CAAA,CACI,GAAA,CAAA,CAAK,GAAA,CAAI1C,CAAC,CAAA,CAAA,CAAG,CAAR,CAAA,CAAWqC,CAAC,CAAA,CAAA,CAAG1C,MAAM,CAAC+C,qBAAP,CAA6BR,CAA7B,CAApB,CAAA,CAAqDlC,CAAC,CAAA,CAAA,CAAGqC,CAAC,CAAC5C,MAA3D,CAAA,CAAmEO,CAAC,EAApE,CAAA,CAAwE,CAAA;AAAA,IACpE,EAAA,CAAA,CAAImC,CAAC,CAACM,OAAF,CAAUJ,CAAC,CAACrC,CAAD,CAAX,CAAA,CAAA,CAAA,CAAkB,CAAlB,CAAA,EAAA,CAAuBL,MAAM,CAAC2C,SAAP,CAAiBK,oBAAjB,CAAsCH,IAAtC,CAA2CN,CAA3C,CAAA,CAA8CG,CAAC,CAACrC,CAAD,CAA/C,CAA3B,CAAA,CACIoC,CAAC,CAACC,CAAC,CAACrC,CAAD,CAAF,CAAD,CAAA,CAAA,CAAUkC,CAAC,CAACG,CAAC,CAACrC,CAAD,CAAF,CAAX,CAAA;AAAA,EACP,CAAA;AAAA,EACL,MAAA,CAAOoC,CAAP,CAAA;AACH,CAVD,CAAA;AAAA;ACIM,KAAA,CAAOQ,MAAP,CAAa,CAAA,CDYJ,CCXb,0BAAA;AACA,0BAAA;AAAA;AAAA;ADcF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;ACbfA,MAAA,CAAAC,iBAAA,CAAA,CAAA,CAAoB,CAApB,CAAA;AACAD,MAAA,CAAAE,iBAAA,CAAA,CAAA,CAAoB,CAApB,CAAA;AACAF,MAAA,CAAAG,yBAAA,CAAA,CAAA,CAA4B,CAA5B,CAAA;AACAH,MAAA,CAAAI,qBAAA,CAAA,CAAA,CAAwB,CAAxB,CAAA;AACAJ,MAAA,CAAAK,sBAAA,CAAA,CAAA,CAAyB,CAAzB,CAAA;AACAL,MAAA,CAAAM,wBAAA,CAAA,CAAA,CAA2B,CAA3B,CAAA;AACAN,MAAA,CAAAO,qBAAA,CAAA,CAAA,CAAwB,CAAxB,CAAA;AAAA;AAGH,KAAA,CAAOC,KAAP,CAAY,CAAA;AAAA,EAIhB7C,WAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAHA,IAAA,CAAA8C,SAAA,CAAA,CAAA,CAAwB,CAAA,CAAxB,CAAA;AAAA,IACA,IAAA,CAAAC,kBAAA,CAAA,CAAA,CAA0C,CAAA,CAA1C,CAAA;AAAA,IAGE,IAAA,CAAKC,KAAL,CAAA,CAAA,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDA,KAAK,CAAA,CAAA,CAAA,CAAW,CAAA;AAAA;AAAA,EAEhBC,KAAK,CAACC,QAAD,CAAA,CAAmB,CAAA;AAAA,IDIlB,GAAA,CAAI9C,EAAJ,CAAA,CAAQ+C,EAAR,CAAA;AAAA;AAAA,ICHJ,KAAA,CAAMC,UAAU,CAAA,CAAA,CAAG,oBAAnB,CAAA;AAAA,IACA,KAAA,CAAMC,OAAO,CAAA,CAAA,CAAA,CAAAjD,EAAA,CAAA,CAAA,CAAG,IAAA,CAAKgD,UAAL,CAAH,CAAA,CAAA,GAAA,CAAmB,IAAnB,CAAA,EAAA,CAAmBhD,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAnB,CAAA,CAAA,CAAmBA,EAAnB,CAAA,CAAA,CAAuB,CAApC,CAAA;AAAA,IAEA,KAAA,CAAMkD,UAAU,CAAA,CAAA,CAAG,oBAAnB,CAAA;AAAA,IACA,KAAA,CAAMC,OAAO,CAAA,CAAA,CAAA,CAAAJ,EAAA,CAAA,CAAA,CAAG,IAAA,CAAKG,UAAL,CAAH,CAAA,CAAA,GAAA,CAAmB,IAAnB,CAAA,EAAA,CAAmBH,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAnB,CAAA,CAAA,CAAmBA,EAAnB,CAAA,CAAA,CAAuB,CAApC,CAAA;AAAA,IAEA,MAAA,CAAOE,OAAO,CAAA,CAAA,CAAGE,OAAjB,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDC,MAAM,CAACN,QAAD,CAAA,CAAmB,CAAA;AAAA,IDEnB,GAAA,CAAI9C,EAAJ,CAAA,CAAQ+C,EAAR,CAAA;AAAA;AAAA,ICDJ,KAAA,CAAMM,MAAM,CAAA,CAAA,CAAG,gBAAf,CAAA;AAAA,IACA,KAAA,CAAMC,GAAG,CAAA,CAAA,CAAA,CAAAtD,EAAA,CAAA,CAAA,CAAG,IAAA,CAAKqD,MAAL,CAAH,CAAA,CAAA,GAAA,CAAe,IAAf,CAAA,EAAA,CAAerD,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAf,CAAA,CAAA,CAAeA,EAAf,CAAA,CAAA,CAAmBuD,QAA5B,CAAA;AAAA,IAEA,KAAA,CAAMC,MAAM,CAAA,CAAA,CAAG,gBAAf,CAAA;AAAA,IACA,KAAA,CAAMC,GAAG,CAAA,CAAA,CAAA,CAAAV,EAAA,CAAA,CAAA,CAAG,IAAA,CAAKS,MAAL,CAAH,CAAA,CAAA,GAAA,CAAe,IAAf,CAAA,EAAA,CAAeT,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAf,CAAA,CAAA,CAAeA,EAAf,CAAA,CAAA,CAAmB,CAA5B,CAAA;AAAA,IAEA,KAAA,CAAMW,QAAQ,CAAA,CAAA,CAAG,IAAA,CAAKZ,QAAL,CAAA,CAAA,CAAA,CAAiB,IAAA,CAAKD,KAAL,CAAWC,QAAX,CAAlC,CAAA;AAAA,IACA,IAAA,CAAKA,QAAL,CAAA,CAAA,CAAA,CAAiBa,IAAI,CAACL,GAAL,CAASK,IAAI,CAACF,GAAL,CAASC,QAAT,CAAA,CAAmBJ,GAAnB,CAAT,CAAA,CAAkCG,GAAlC,CAAjB,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDG,IAAI,CAAA,CAAA,CAAA,CAAA;AAAA,IACF,IAAA,CAAKlB,SAAL,CAAemB,OAAf,CAAwBf,QAAD,CAAA,EAAA,CAAc,IAAA,CAAKM,MAAL,CAAYN,QAAZ,CAArC,CAAA,CAAA;AAAA,IACA,IAAA,CAAKH,kBAAL,CAAwBkB,OAAxB,CAAiCC,iBAAD,CAAA,EAAA,CAAuB,IAAA,CAAKA,iBAAL,CAAA,CAAwBD,OAAxB,CAAiCf,QAAD,CAAA,EAAA,CAAqBA,QAAQ,CAACc,IAAT,CAAA,CAArD,CAAvD,CAAA,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDG,YAAY,CAACjB,QAAD,CAAA,CAAqBkB,IAAA,CAAA,CAAA,CAAmD,CAAA,CAAxE,CAAA,CAA0E,CAAA;AAAA,IDDhF,GAAA,CAAIhE,EAAJ,CAAA,CAAQ+C,EAAR,CAAA,CAAYkB,EAAZ,CAAA,CAAgBC,EAAhB,CAAA,CAAoBhG,EAApB,CAAA,CAAwBiG,EAAxB,CAAA,CAA4BC,EAA5B,CAAA,CAAgCC,EAAhC,CAAA,CAAoCC,EAApC,CAAA,CAAwCC,EAAxC,CAAA;AAAA;AAAA,ICEJ,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG1B,QAAjB,CAAA;AAAA,IACA,KAAA,CAAM2B,eAAe,CAAA,CAAA,CAAG,oBAAxB,CAAA;AAAA,IACA,KAAA,CAAMzB,UAAU,CAAA,CAAA,CAAG,oBAAnB,CAAA;AAAA,IACA,KAAA,CAAM0B,iBAAiB,CAAA,CAAA,CAAG,2BAA1B,CAAA;AAAA,IACA,KAAA,CAAMxB,UAAU,CAAA,CAAA,CAAG,oBAAnB,CAAA;AAAA,IACA,KAAA,CAAMyB,iBAAiB,CAAA,CAAA,CAAG,2BAA1B,CAAA;AAAA,IACA,KAAA,CAAMtB,MAAM,CAAA,CAAA,CAAG,gBAAf,CAAA;AAAA,IACA,KAAA,CAAMuB,aAAa,CAAA,CAAA,CAAG,uBAAtB,CAAA;AAAA,IACA,KAAA,CAAMpB,MAAM,CAAA,CAAA,CAAG,gBAAf,CAAA;AAAA,IACA,KAAA,CAAMqB,aAAa,CAAA,CAAA,CAAG,uBAAtB,CAAA;AAAA,IACA,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,kBAAjB,CAAA;AAAA;AAAA,IACA,KAAA,CAAMC,SAAS,CAAA,CAAA,CAAIrG,GAAD,CAAA,EAAA,CAAQ,CAAA;AAAA,MAAA,GAAA,CAAAsB,EAAA,CAAA;AAAA;AAAA,MAAC,MAAA,CAAA,CAAC,CAAA,CAAA,CAAAA,EAAA,CAAA,CAAA,CAAChB,MAAM,CAACC,wBAAP,CAAgC,IAAA,CAAK,WAAL,CAAhC,CAAA,CAAmDP,GAAnD,CAAD,CAAA,CAAA,GAAA,CAAwD,IAAxD,CAAA,EAAA,CAAwDsB,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAxD,CAAA,CAAA,CAAwD,IAAA,CAAA,CAAxD,CAAA,CAAA,CAAwDA,EAAA,CAAEgF,GAA1D,CAAD,CAAA;AAAA,IAA8D,CAAzF,CAAA;AAAA;AAAA,IAEA,EAAA,CAAA,CAAI,CAACD,SAAS,CAACP,QAAD,CAAd,CAAA,CAA0B,CAAA;AAAA,MACxB,IAAA,CAAKA,QAAL,CAAA,CAAA,CAAA,CAAc,CAAAzB,EAAA,CAAA,CAAA,CAAA,CAAA/C,EAAA,CAAA,CAAA,CAAGgE,IAAI,CAACiB,KAAR,CAAA,CAAA,GAAA,CAAa,IAAb,CAAA,EAAA,CAAajF,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAb,CAAA,CAAA,CAAaA,EAAb,CAAA,CAAA,CAAiBiC,MAAM,CAACwC,eAAD,CAAvB,CAAA,CAAA,GAAA,CAAwC,IAAxC,CAAA,EAAA,CAAwC1B,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAxC,CAAA,CAAA,CAAwCA,EAAxC,CAAA,CAAA,CAA4C,CAA1D,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,EAAA,CAAA,CAAI,CAACgC,SAAS,CAAC/B,UAAD,CAAd,CAAA,CAA4B,CAAA;AAAA,MAC1B,IAAA,CAAKA,UAAL,CAAA,CAAA,CAAA,CAAgB,CAAAkB,EAAA,CAAA,CAAA,CAAA,CAAAD,EAAA,CAAA,CAAA,CAAGD,IAAI,CAACf,OAAR,CAAA,CAAA,GAAA,CAAe,IAAf,CAAA,EAAA,CAAegB,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAf,CAAA,CAAA,CAAeA,EAAf,CAAA,CAAA,CAAmBhC,MAAM,CAACyC,iBAAD,CAAzB,CAAA,CAAA,GAAA,CAA4C,IAA5C,CAAA,EAAA,CAA4CR,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAA5C,CAAA,CAAA,CAA4CA,EAA5C,CAAA,CAAA,CAAgD,CAAhE,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,EAAA,CAAA,CAAI,CAACa,SAAS,CAAC7B,UAAD,CAAd,CAAA,CAA4B,CAAA;AAAA,MAC1B,IAAA,CAAKA,UAAL,CAAA,CAAA,CAAA,CAAgB,CAAAiB,EAAA,CAAA,CAAA,CAAA,CAAAjG,EAAA,CAAA,CAAA,CAAG8F,IAAI,CAACb,OAAR,CAAA,CAAA,GAAA,CAAe,IAAf,CAAA,EAAA,CAAejF,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAf,CAAA,CAAA,CAAeA,EAAf,CAAA,CAAA,CAAmB+D,MAAM,CAAC0C,iBAAD,CAAzB,CAAA,CAAA,GAAA,CAA4C,IAA5C,CAAA,EAAA,CAA4CR,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAA5C,CAAA,CAAA,CAA4CA,EAA5C,CAAA,CAAA,CAAgD,CAAhE,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,EAAA,CAAA,CAAI,CAACY,SAAS,CAAC1B,MAAD,CAAd,CAAA,CAAwB,CAAA;AAAA,MACtB,IAAA,CAAKA,MAAL,CAAA,CAAA,CAAA,CAAY,CAAAgB,EAAA,CAAA,CAAA,CAAA,CAAAD,EAAA,CAAA,CAAA,CAAGJ,IAAI,CAACV,GAAR,CAAA,CAAA,GAAA,CAAW,IAAX,CAAA,EAAA,CAAWc,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAX,CAAA,CAAA,CAAWA,EAAX,CAAA,CAAA,CAAenC,MAAM,CAAC2C,aAAD,CAArB,CAAA,CAAA,GAAA,CAAoC,IAApC,CAAA,EAAA,CAAoCP,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAApC,CAAA,CAAA,CAAoCA,EAApC,CAAA,CAAA,CAAwCd,QAApD,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,EAAA,CAAA,CAAI,CAACwB,SAAS,CAACvB,MAAD,CAAd,CAAA,CAAwB,CAAA;AAAA,MACtB,IAAA,CAAKA,MAAL,CAAA,CAAA,CAAA,CAAY,CAAAe,EAAA,CAAA,CAAA,CAAA,CAAAD,EAAA,CAAA,CAAA,CAAGN,IAAI,CAACP,GAAR,CAAA,CAAA,GAAA,CAAW,IAAX,CAAA,EAAA,CAAWa,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAX,CAAA,CAAA,CAAWA,EAAX,CAAA,CAAA,CAAerC,MAAM,CAAC4C,aAAD,CAArB,CAAA,CAAA,GAAA,CAAoC,IAApC,CAAA,EAAA,CAAoCN,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAApC,CAAA,CAAA,CAAoCA,EAApC,CAAA,CAAA,CAAwC,CAApD,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,EAAA,CAAA,CAAI,CAACQ,SAAS,CAACD,QAAD,CAAd,CAAA,CAA0B,CAAA;AAAA,MACxB9F,MAAM,CAACM,cAAP,CAAsB,IAAA,CAAK,WAAL,CAAtB,CAAA,CAAyCwF,QAAzC,CAAA,CAAmD,CAAA;AAAA,QACjDE,GAAG,CAAA,CAAE,CAAA,CAAA,CAAA,EAAA,CAAM,IAAA,CAAKnC,KAAL,CAAWC,QAAX,CAAA;AAAA,MADsC,CAAnD,CAAA,CAAA;AAAA,IAGD,CAAA;AAAA,EACF,CAAA;AAAA;AAtEe,CAAA;AAAA;ADkGlB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;AAAA;AC1BhB,KAAA,CAAOxC,YAAP,CAAA,OAAA,CAA4BmC,KAA5B,CAAiC,CAAA;AAAA,EAAvC7C,WAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IDAQ,KAAA,CAAM,GAAGf,SAAT,CAAA,CAAA;AAAA,ICGN,IAAA,CAAAqG,UAAA,CAAA,CAAA,CAAajD,MAAM,CAACC,iBAApB,CAAA;AAAA,IAMA,IAAA,CAAAQ,SAAA,CAAA,CAAA,CAAwB,CAAC,KAAD,CAAA,CAAQ,MAAR,CAAA,CAAgB,MAAhB,CAAxB,CAAA;AAAA,IACA,IAAA,CAAAC,kBAAA,CAAA,CAAA,CAA0C,CAAC,MAAD,CAA1C,CAAA;AAAA,EAwCD,CAAA;AAAA;AAAA,EAtCCC,KAAK,CAAA,CAAA,CAAA,CAAA;AAAA,IACH,IAAA,CAAKxC,KAAL,CAAA,CAAA,CAAa,CAAC,GAAA,CAAI+E,IAAJ,CAAS,IAAT,CAAA,CAAe,CAAA;AAAA,MAAEC,OAAO,CAAA,CAAE,IAAA;AAAA,IAAX,CAAf,CAAD,CAAb,CAAA;AAAA,IACA,IAAA,CAAKrB,YAAL,CAAkB,KAAlB,CAAA,CAAA;AAAA,IACA,IAAA,CAAKA,YAAL,CAAkB,MAAlB,CAAA,CAA0B,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAE,IAAT,CAAA;AAAA,MAAe3B,GAAG,CAAA,CAAE,IAAA;AAAA,IAApB,CAA1B,CAAA,CAAA;AAAA,IACA,IAAA,CAAKS,YAAL,CAAkB,MAAlB,CAAA,CAA0B,CAAA;AAAA,MAAET,GAAG,CAAA,CAAE,IAAA;AAAA,IAAP,CAA1B,CAAA,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAInD,IAAJ,CAAA,CAAA,CAAQ,CAAA;AAAA,IACN,MAAA,CAAO,IAAA,CAAKC,KAAL,CAAWiF,MAAX,CAAmBlF,IAAD,CAAA,EAAA,CAAUA,IAAI,CAACiF,OAAjC,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDE,WAAW,CAACC,MAAD,CAAA,CAA+B,CAAA;AAAA,IACxC,MAAA,CAAO,IAAA,CAAKpF,IAAL,CAAUqF,GAAV,CAAcD,MAAd,CAAA,CAAsBE,MAAtB,CAA6B,CAACC,GAAD,CAAA,CAAMC,OAAN,CAAA,CAAA,EAAA,CAAkBD,GAAG,CAAA,CAAA,CAAGC,OAArD,CAAA,CAA8D,CAA9D,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIC,UAAJ,CAAA,CAAA,CAAc,CAAA;AAAA,IACZ,MAAA,CAAO,IAAA,CAAKN,WAAL,CAAkBnF,IAAD,CAAA,EAAA,CAAUA,IAAI,CAACyF,UAAhC,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIC,WAAJ,CAAA,CAAA,CAAe,CAAA;AAAA,IACb,MAAA,CAAO,IAAA,CAAKD,UAAL,CAAA,CAAA,CAAkB3D,MAAM,CAACG,yBAAhC,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAI0D,MAAJ,CAAA,CAAA,CAAU,CAAA;AAAA,IACR,MAAA,CAAO,IAAA,CAAKR,WAAL,CAAkBnF,IAAD,CAAA,EAAA,CAAUA,IAAI,CAAC2F,MAAhC,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIC,WAAJ,CAAA,CAAA,CAAe,CAAA;AAAA,IACb,MAAA,CAAO,IAAA,CAAKD,MAAL,CAAA,CAAA,CAAc7D,MAAM,CAACO,qBAA5B,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIwD,MAAJ,CAAA,CAAA,CAAU,CAAA;AAAA,IACR,MAAA,CAAO,IAAA,CAAKV,WAAL,CAAkBnF,IAAD,CAAA,EAAA,CAAUA,IAAI,CAAC6F,MAAhC,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIC,WAAJ,CAAA,CAAA,CAAe,CAAA;AAAA,IACb,MAAA,CAAO,IAAA,CAAKD,MAAL,CAAA,CAAA,CAAc/D,MAAM,CAACI,qBAA5B,CAAA;AAAA,EACD,CAAA;AAAA;AAjDoC,CAAA;AAAA;ADoFvC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AChC9B,KAAA,CAAO8C,IAAP,CAAA,OAAA,CAAoB1C,KAApB,CAAyB,CAAA;AAAA,EAY7B7C,WAAA,CAAYC,KAAZ,CAAA,CAAiCG,EAAjC,CAAA,CAA+I,CAAA;AAAA,ID1BzI,GAAA,CC0B2B,CAAA;AAAA,MAAEoF,OAAO,CAAA,CAAA,CAAG,KAAZ,CAAA;AAAA,MAAmBc,IAAI,CAAA,CAAA,CAAG,CAA1B,CAAA;AAAA,MAA6BF,MAAM,CAAA,CAAA,CAAG,CAAtC,CAAA;AAAA,MAAyCG,KAAK,CAAA,CAAA,CAAG,CAAjD,CAAA;AAAA,MAAoDP,UAAU,CAAA,CAAA,CAAG,CAAjE,CAAA;AAAA,MAAoEE,MAAM,CAAA,CAAA,CAAG,CAA7E,CAAA;AAAA,MAAgFM,SAAS,CAAA,CAAA,CAAG,EAAA;AAAA,IAA5F,CAAA,CAAA,CAAA,CAA8FpG,ED1BzH,CAAA;AAAA,QC0B8HqG,SAAS,CAAA,CAAA,CAAA/E,MAAA,CAAAtB,EAAA,CAAA,CAA5G,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,YAAA,CAAA,CAAA,QAAA,CAAA,CAAA,WAAA,CAA4G,CD1BvI,CAAA;AAAA;AAAA,IC2BJ,KAAA,CAAA,CAAA,CAAA;AAAA,IAHF,IAAA,CAAA0C,SAAA,CAAA,CAAA,CAAwB,CAAC,YAAD,CAAxB,CAAA;AAAA,IAKE,IAAA,CAAK7C,KAAL,CAAA,CAAA,CAAaA,KAAb,CAAA;AAAA,IAEA,IAAA,CAAKuF,OAAL,CAAA,CAAA,CAAeA,OAAf,CAAA;AAAA,IACA,IAAA,CAAKrB,YAAL,CAAkB,MAAlB,CAAA,CAA0B,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAEiB,IAAAA;AAAAA,IAAT,CAA1B,CAAA,CAAA;AAAA,IACA,IAAA,CAAKnC,YAAL,CAAkB,QAAlB,CAAA,CAA4B,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAEe,MAAAA;AAAAA,IAAT,CAA5B,CAAA,CAAA;AAAA,IACA,IAAA,CAAKjC,YAAL,CAAkB,OAAlB,CAAA,CAA2B,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAEkB,KAAAA;AAAAA,IAAT,CAA3B,CAAA,CAAA;AAAA,IACA,IAAA,CAAKpC,YAAL,CAAkB,YAAlB,CAAA,CAAgC,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAEW,UAAAA;AAAAA,IAAT,CAAhC,CAAA,CAAA;AAAA,IACA,IAAA,CAAK7B,YAAL,CAAkB,QAAlB,CAAA,CAA4B,CAAA;AAAA,MAAEkB,KAAK,CAAA,CAAEa,MAAT,CAAA;AAAA,MAAiBxC,GAAG,CAAA,CAAE8C,SAAAA;AAAAA,IAAtB,CAA5B,CAAA,CAAA;AAAA,IACA,IAAA,CAAKrC,YAAL,CAAkB,QAAlB,CAAA,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIuC,aAAJ,CAAA,CAAA,CAAiB,CAAA;AAAA,IACf,MAAA,CAAO,IAAA,CAAKH,KAAL,CAAA,CAAA,CAAalE,MAAM,CAACK,sBAA3B,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIiE,iBAAJ,CAAA,CAAA,CAAqB,CAAA;AAAA,IACnB,EAAA,CAAA,CAAI,IAAA,CAAK1G,KAAL,CAAW2G,IAAX,CAAA,CAAA,CAAkB,IAAA,CAAK3G,KAAL,CAAW4G,OAAjC,CAAA,CAA0C,CAAA;AAAA,MACxC,MAAA,CAAOxE,MAAM,CAACM,wBAAd,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,MAAA,CAAO,CAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAImE,cAAJ,CAAA,CAAA,CAAkB,CAAA;AAAA,IAChB,EAAA,CAAA,CAAI,IAAA,CAAKH,iBAAL,CAAA,CAAA,CAAyB,CAAzB,CAAA,EAAA,CAA8B,IAAA,CAAKX,UAAL,CAAA,CAAA,CAAkB,IAAA,CAAKU,aAAzD,CAAA,CAAwE,CAAA;AAAA,MACtE,MAAA,CAAO3C,IAAI,CAACgD,IAAL,CAAU,CAAC,IAAA,CAAKL,aAAL,CAAA,CAAA,CAAqB,IAAA,CAAKV,UAA3B,CAAA,CAAA,CAAA,CAAyC,IAAA,CAAKW,iBAAxD,CAAP,CAAA;AAAA,IACD,CAAA;AAAA,EACF,CAAA;AAAA;AAAA,EAED,GAAA,CAAIK,MAAJ,CAAA,CAAA,CAAU,CAAA;AAAA,IACR,MAAA,CAAO,IAAA,CAAKhB,UAAL,CAAA,CAAA,CAAkB,IAAA,CAAKI,MAAvB,CAAA,CAAA,CAAgC,IAAA,CAAKF,MAA5C,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED,GAAA,CAAIe,SAAJ,CAAA,CAAA,CAAa,CAAA;AAAA,IACX,MAAA,CAAO,IAAA,CAAKX,IAAL,CAAA,CAAA,CAAYjE,MAAM,CAACE,iBAA1B,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAED2E,MAAM,CAACC,GAAD,CAAA,CAAI,CAAA;AAAA,IACR,EAAA,CAAA,CAAI,IAAA,CAAKH,MAAL,CAAA,CAAA,CAAc,IAAA,CAAKI,SAAnB,CAAA,EAAA,CAAgC,IAAA,CAAKD,GAAL,CAAA,CAAA,CAAA,CAAY,IAAA,CAAK,WAAL,CAAhD,CAAA,CAAmE,CAAA;AAAA,MACjE,IAAA,CAAKA,GAAL,CAAA,EAAA,CAAA;AAAA,MACA,MAAA,CAAO,IAAP,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,MAAA,CAAO,KAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EAEDE,QAAQ,CAACF,GAAD,CAAA,CAAI,CAAA;AAAA,IACV,EAAA,CAAA,CAAI,IAAA,CAAKA,GAAL,CAAA,CAAA,EAAA,CAAa,IAAA,CAAK,WAAL,CAAjB,CAAA,CAAoC,CAAA;AAAA,MAClC,IAAA,CAAKA,GAAL,CAAA,EAAA,CAAA;AAAA,MACA,MAAA,CAAO,IAAP,CAAA;AAAA,IACD,CAAA;AAAA;AAAA,IACD,MAAA,CAAO,KAAP,CAAA;AAAA,EACD,CAAA;AAAA;AAjE4B,CAAA;AAAA;ADoH/B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA;AAAA,CAAA,CAAA,CAAA;;AEhQnB,MAAA,gFAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;AAJlF,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AACO,KAAA,CAAMhJ,IAAI,CAAA,CAAA,CAAG,eAAb,CAAA;AAQP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAPb,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,o7CAAjB,CAAA;AASP,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,GAAG,CAAC,QAAQ,CAAC,CAAC,CATCA,QASQ,CAAC;AACxB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AATpB,KAAA,CAAMC,YAAY,CAAA,CAAA,CAAG,CAAA,CAArB,CAAA;AAWP,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AAVpC,GAAA,CAAIC,EAAJ,CAAA;AAAA;AACO,QAAA,CAASC,QAAT,CAAkBC,SAAlB,CAAA,CAA6B,CAAA;AAAA,EAClC,EAAA,CAAA,CAAI,CAACF,EAAL,CAAA,CAAS,CAAA;AAAA,IACPA,EAAE,CAAA,CAAA,CAAGG,YAAAA,CAAAA,aAAAA,CAAcC,MAAd,CAAqB,CAAA;AAAA,MAAEP,IAAF,CAAA;AAAA,MAAQC,QAAR,CAAA;AAAA,MAAkBC,YAAAA;AAAAA,IAAlB,CAArB,CAAL,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EACDG,SAAS,CAACD,QAAV,CAAmBD,EAAnB,CAAA,CAAA;AACD,CAAA;AAAA,CAAA,CAAA,CAAA;;ACXD,MAAA,oHAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;ACH9B,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAAA;ADWA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAbvuB,GAAA,CAAIK,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,UAAV,CAAA,CAAsBC,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCC,IAAnC,CAAA,CAAyC,CAAA;AAAA,EACnF,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAGC,SAAS,CAACC,MAAlB,CAAA;AAAA,MAA0BC,CAAC,CAAA,CAAA,CAAGH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQH,MAAR,CAAA,CAAA,CAAiBE,IAAI,CAAA,GAAA,CAAK,IAAT,CAAA,CAAA,CAAgBA,IAAI,CAAA,CAAA,CAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,CAAA,CAAwCC,GAAxC,CAAvB,CAAA,CAAA,CAAsEC,IAArH,CAAA;AAAA,MAA2HO,CAA3H,CAAA;AAAA,EACA,EAAA,CAAA,CAAI,MAAA,CAAOC,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACC,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2EL,CAAC,CAAA,CAAA,CAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,CAAA,CAA6BC,MAA7B,CAAA,CAAqCC,GAArC,CAAA,CAA0CC,IAA1C,CAAJ,CAA3E,IAAA,CACK,GAAA,CAAA,CAAK,GAAA,CAAIU,CAAC,CAAA,CAAA,CAAGb,UAAU,CAACM,MAAX,CAAA,CAAA,CAAoB,CAAjC,CAAA,CAAoCO,CAAC,CAAA,EAAA,CAAI,CAAzC,CAAA,CAA4CA,CAAC,EAA7C,CAAA,CAAiD,EAAA,CAAA,CAAIH,CAAC,CAAA,CAAA,CAAGV,UAAU,CAACa,CAAD,CAAlB,CAAA,CAAuBN,CAAC,CAAA,CAAA,CAAG,CAACH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACH,CAAD,CAAT,CAAA,CAAA,CAAeH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAAA,CAAcK,CAAd,CAAT,CAAA,CAAA,CAA4BG,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAA7C,CAAA,CAAA,EAAA,CAA+DK,CAAnE,CAAA;AAAA,EAC7E,MAAA,CAAOH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,EAAA,CAASG,CAAT,CAAA,EAAA,CAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCK,CAAnC,CAAd,CAAA,CAAqDA,CAA5D,CAAA;AACH,CALD,CAAA;AAAA;AAMA,GAAA,CAAIQ,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAgB,CAAA;AAAA,EAC1D,EAAA,CAAA,CAAI,MAAA,CAAON,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACO,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2E,MAAA,CAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,CAAA,CAAoBC,CAApB,CAAP,CAAA;AAC9E,CAFD,CAAA;AAAA;ACJA,GAAA,CAAayH,YAAY,CAAA,CAAA,CAAzB,KAAA,CAAaA,YAAb,CAAyB,CAAA;AAAA,EAGvBtH,WAAA,CAAYC,KAAZ,CAAA,CAA+B,CAAA;AAAA,IAC7B,IAAA,CAAKA,KAAL,CAAA,CAAA,CAAaA,KAAb,CAAA;AAAA,EACD,CAAA;AAAA;AALsB,CAAzB,CAAA;AD+BA,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AC9BXqH,YAAA,CAAA7G,MAAA,CAAA,CAAA,CAAS,CAACC,aAAAA,CAAAA,YAAD,CAAT,CAAA;AADZ,OAAA,CAAA,YAAA,CAAA,CAAA,CAAA4G,YAAY,CAAA,CAAA,CAAA3I,UAAA,CAAA,CAFsB,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAAgC,YAAA,CAEtB,CAAA,CDkBrBhB,UAAU,CAAC,mBAAD,CAAA,CAAsB,CCffe,aAAAA,CAAAA,YDee,CAAtB,CClBW,CAAA,CAAA,CAAZ4G,YAAY,CAAZ,CAAA;AAAA,CAAA,CAAA,CAAA;;ACFb,MAAA,oHAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;AAJlF,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AACA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA,CAAA;AAAA;AACA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AAAA;AAUA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAXhuB,KAAA,CAAMnJ,IAAI,CAAA,CAAA,CAAG,aAAb,CAAA;AAcP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAbb,KAAA,CAAMC,QAAQ,CAAA,CAAA,CAAG,oKAAjB,CAAA;AAeP,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,GAAG,CAAC,QAAQ,CAAC,CAAC,CAfCA,QAeQ,CAAC;AACxB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AAfpB,KAAA,CAAMC,YAAY,CAAA,CAAA,CAAG,CAAEoD,EAAF,CAAA,CAAML,EAAN,CAArB,CAAA;AAiBP,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AAAA;AAhBpC,GAAA,CAAI9C,EAAJ,CAAA;AAAA;AACO,QAAA,CAASC,QAAT,CAAkBC,SAAlB,CAAA,CAA6B,CAAA;AAAA,EAClC,EAAA,CAAA,CAAI,CAACF,EAAL,CAAA,CAAS,CAAA;AAAA,IACPA,EAAE,CAAA,CAAA,CAAGG,YAAAA,CAAAA,aAAAA,CAAcC,MAAd,CAAqB,CAAA;AAAA,MAAEP,IAAF,CAAA;AAAA,MAAQC,QAAR,CAAA;AAAA,MAAkBC,YAAAA;AAAAA,IAAlB,CAArB,CAAL,CAAA;AAAA,EACD,CAAA;AAAA;AAAA,EACDG,SAAS,CAACD,QAAV,CAAmBD,EAAnB,CAAA,CAAA;AACD,CAAA;AAAA,CAAA,CAAA,CAAA;;ACbD,MAAA,gHAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA,YAAY,CAAC;AAAA;AAEb,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA;ACH5B,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AAAA;AAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAAA;ADWA,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA;AAE1L,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAbvuB,GAAA,CAAIK,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,UAAV,CAAA,CAAsBC,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCC,IAAnC,CAAA,CAAyC,CAAA;AAAA,EACnF,GAAA,CAAIC,CAAC,CAAA,CAAA,CAAGC,SAAS,CAACC,MAAlB,CAAA;AAAA,MAA0BC,CAAC,CAAA,CAAA,CAAGH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQH,MAAR,CAAA,CAAA,CAAiBE,IAAI,CAAA,GAAA,CAAK,IAAT,CAAA,CAAA,CAAgBA,IAAI,CAAA,CAAA,CAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,CAAA,CAAwCC,GAAxC,CAAvB,CAAA,CAAA,CAAsEC,IAArH,CAAA;AAAA,MAA2HO,CAA3H,CAAA;AAAA,EACA,EAAA,CAAA,CAAI,MAAA,CAAOC,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACC,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2EL,CAAC,CAAA,CAAA,CAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,CAAA,CAA6BC,MAA7B,CAAA,CAAqCC,GAArC,CAAA,CAA0CC,IAA1C,CAAJ,CAA3E,IAAA,CACK,GAAA,CAAA,CAAK,GAAA,CAAIU,CAAC,CAAA,CAAA,CAAGb,UAAU,CAACM,MAAX,CAAA,CAAA,CAAoB,CAAjC,CAAA,CAAoCO,CAAC,CAAA,EAAA,CAAI,CAAzC,CAAA,CAA4CA,CAAC,EAA7C,CAAA,CAAiD,EAAA,CAAA,CAAIH,CAAC,CAAA,CAAA,CAAGV,UAAU,CAACa,CAAD,CAAlB,CAAA,CAAuBN,CAAC,CAAA,CAAA,CAAG,CAACH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACH,CAAD,CAAT,CAAA,CAAA,CAAeH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,CAAA,CAAQM,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAAA,CAAcK,CAAd,CAAT,CAAA,CAAA,CAA4BG,CAAC,CAACT,MAAD,CAAA,CAASC,GAAT,CAA7C,CAAA,CAAA,EAAA,CAA+DK,CAAnE,CAAA;AAAA,EAC7E,MAAA,CAAOH,CAAC,CAAA,CAAA,CAAG,CAAJ,CAAA,EAAA,CAASG,CAAT,CAAA,EAAA,CAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,CAAA,CAA8BC,GAA9B,CAAA,CAAmCK,CAAnC,CAAd,CAAA,CAAqDA,CAA5D,CAAA;AACH,CALD,CAAA;AAAA;AAMA,GAAA,CAAIQ,UAAU,CAAA,CAAA,CAAI,IAAA,CAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,IAAA,CAAA,CAAA,CAAA,CAAKA,UAAd,CAAA,EAAA,CAA6B,QAAA,CAAA,CAAUC,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAgB,CAAA;AAAA,EAC1D,EAAA,CAAA,CAAI,MAAA,CAAON,OAAP,CAAA,GAAA,CAAmB,QAAnB,CAAA,EAAA,CAA+B,MAAA,CAAOA,OAAO,CAACO,QAAf,CAAA,GAAA,CAA4B,UAA/D,CAAA,CAA2E,MAAA,CAAOP,OAAO,CAACO,QAAR,CAAiBF,CAAjB,CAAA,CAAoBC,CAApB,CAAP,CAAA;AAC9E,CAFD,CAAA;AAAA;ACJA,GAAA,CAAa0H,UAAU,CAAA,CAAA,CAAvB,KAAA,CAAaA,UAAb,CAAuB,CAAA;AAAA,EAGrBvH,WAAA,CAAYC,KAAZ,CAAA,CAA+B,CAAA;AAAA,IAC7B,IAAA,CAAKA,KAAL,CAAA,CAAA,CAAaA,KAAb,CAAA;AAAA,EACD,CAAA;AAAA;AALoB,CAAvB,CAAA;AD+BA,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;AC9BPsH,UAAA,CAAA9G,MAAA,CAAA,CAAA,CAAS,CAACC,aAAAA,CAAAA,YAAD,CAAT,CAAA;AADZ,OAAA,CAAA,UAAA,CAAA,CAAA,CAAA6G,UAAU,CAAA,CAAA,CAAA5I,UAAA,CAAA,CAFwB,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAAgC,YAAA,CAExB,CAAA,CDkBnBhB,UAAU,CAAC,mBAAD,CAAA,CAAsB,CCffe,aAAAA,CAAAA,YDee,CAAtB,CClBS,CAAA,CAAA,CAAV6G,UAAU,CAAV,CAAA;AAAA,CAAA,CAAA,CAAA","file":"app-bundle.js","sourcesContent":["import { CustomElement } from '@aurelia/runtime-html';\nexport const name = \"base-worker-page\";\nexport const template = \"<section>\\n  <table>\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">resource</th>\\n        <th scope=\\\"col\\\">value</th>\\n        <th scope=\\\"col\\\">min</th>\\n        <th scope=\\\"col\\\">max</th>\\n        <th scope=\\\"col\\\">produce</th>\\n        <th scope=\\\"col\\\">consume</th>\\n        <th scope=\\\"col\\\">delta</th>\\n        <th scope=\\\"col\\\">actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr>\\n        <th scope=\\\"row\\\">population</th>\\n        <td><code>${base.population}</code></td>\\n        <td><code>${base.populationMin}</code></td>\\n        <td><code>${base.populationMax}</code></td>\\n        <td><code>${base.populationProduce}</code></td>\\n        <td><code>${base.populationConsume}</code></td>\\n        <td><code>${base.populationDelta}</code></td>\\n        <td>&nbsp;</td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">worker</th>\\n        <td><code>${base.worker}</code></td>\\n        <td><code>${base.workerMin}</code></td>\\n        <td><code>${base.workerMax}</code></td>\\n        <td><code>${base.workerProduce}</code></td>\\n        <td><code>${base.workerConsume}</code></td>\\n        <td><code>${base.workerDelta}</code></td>\\n        <td>&nbsp;</td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">logger</th>\\n        <td><code>${base.logger}</code></td>\\n        <td><code>${base.loggerMin}</code></td>\\n        <td><code>${base.loggerMax}</code></td>\\n        <td><code>${base.loggerProduce}</code></td>\\n        <td><code>${base.loggerConsume}</code></td>\\n        <td><code>${base.loggerDelta}</code></td>\\n        <td>\\n          <button click.trigger=\\\"base.assign('logger')\\\">+</button>\\n          <button click.trigger=\\\"base.unassign('logger')\\\">-</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</section>\\n\";\nexport default template;\nexport const dependencies = [  ];\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies });\n  }\n  container.register(_e);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport * as __au2ViewDef from './base-worker-page.html';\nimport { customElement } from '@aurelia/runtime-html';\nimport { StateService } from \"./state-service\";\nlet BaseWorkerPage = class BaseWorkerPage {\n    constructor(state) {\n        this.state = state;\n    }\n    load(parameters) {\n        var _a;\n        this.id = Number((_a = parameters.id) !== null && _a !== void 0 ? _a : 0);\n        this.base = this.state.bases[0];\n    }\n};\nBaseWorkerPage.inject = [StateService];\nBaseWorkerPage.parameters = ['id'];\nBaseWorkerPage = __decorate([\n    customElement(__au2ViewDef),\n    __metadata(\"design:paramtypes\", [StateService])\n], BaseWorkerPage);\nexport { BaseWorkerPage };\n","import { IRouteableComponent } from '@aurelia/router';\n\nimport { Base, StateService } from \"./state-service\";\n\nexport class BaseWorkerPage implements IRouteableComponent {\n  public static readonly inject = [StateService];\n\n  public static parameters = ['id'];\n\n  public base: Base;\n  public id: number;\n  public state: StateService;\n\n  constructor(state: StateService) {\n    this.state = state;\n  }\n\n  public load(parameters) {\n    this.id = Number(parameters.id ?? 0)\n    this.base = this.state.bases[0]\n  }\n}\n","define(['dumber/lib/inject-css'],function(m){return m;});","\"use strict\";\n\nvar _aurelia = _interopRequireWildcard(require(\"aurelia\"));\n\nvar _myApp = require(\"./my-app\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_aurelia.default.register(_aurelia.RouterConfiguration) // To use HTML5 pushState routes, replace previous line with the following\n// customized router config.\n// .register(RouterConfiguration.customize({ useUrlFragmentHash: false }))\n.app(_myApp.MyApp).start();","import Aurelia, { RouterConfiguration } from 'aurelia';\nimport { MyApp } from './my-app';\n\nAurelia\n  .register(RouterConfiguration)\n  // To use HTML5 pushState routes, replace previous line with the following\n  // customized router config.\n  // .register(RouterConfiguration.customize({ useUrlFragmentHash: false }))\n  .app(MyApp)\n  .start();\n","import { CustomElement } from '@aurelia/runtime-html';\nexport const name = \"missing-page\";\nexport const template = \"<h3>Ouch! Couldn't find '${missingComponent}'!</h3>\\n\";\nexport default template;\nexport const dependencies = [  ];\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies });\n  }\n  container.register(_e);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport * as __au2ViewDef from './missing-page.html';\nimport { customElement } from '@aurelia/runtime-html';\nlet MissingPage = class MissingPage {\n    enter(parameters) {\n        this.missingComponent = parameters.id;\n    }\n};\nMissingPage.parameters = ['id'];\nMissingPage = __decorate([\n    customElement(__au2ViewDef)\n], MissingPage);\nexport { MissingPage };\n","export class MissingPage {\n  public static parameters = ['id'];\n  public missingComponent: string ;\n\n  public enter(parameters: {id: string}): void {\n    this.missingComponent = parameters.id;\n  }\n}\n","nav {\n  background: #eee;\n  display: flex;\n}\n\na {\n  padding: 10px;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    background-color: darkgray;\n  }\n}\n\n.load-active {\n  background-color: lightgray;\n}\n","nav {\n  background: #eee;\n  display: flex;\n}\n\na {\n  padding: 10px;\n  text-decoration: none;\n  color: black;\n}\na:hover {\n  background-color: darkgray;\n}\n\n.load-active {\n  background-color: lightgray;\n}","import { CustomElement } from '@aurelia/runtime-html';\nimport { Registration } from '@aurelia/kernel';\nimport d0 from \"./my-app.css\";\nimport * as d1 from \"./treasury-page\";\nimport * as d2 from \"./worker-page\";\nimport * as d3 from \"./missing-page\";\nexport const name = \"my-app\";\nexport const template = \"\\n\\n\\n\\n<div>\\n  <p>Day <code>${state.day}</code></p>\\n  <p>Population <code>${state.population}</code></p>\\n  <p>Food <code>${state.food}</code> (<code>${state.foodDelta}</code>)</p>\\n  <button click.trigger=\\\"state.turn()\\\">End Day</button>\\n</div>\\n\\n<nav>\\n  <a load=\\\"treasury-page\\\">Treasury</a>\\n  <a load=\\\"worker-page/base-worker-page(id=0)\\\">Workers</a>\\n</nav>\\n\\n<au-viewport default=\\\"treasury-page\\\" fallback=\\\"missing-page\\\"></au-viewport>\\n\\n<div>\\n  <button click.trigger=\\\"state.reset()\\\">Reset</button>\\n</div>\\n\";\nexport default template;\nexport const dependencies = [ d1, d2, d3, Registration.defer('.css', d0) ];\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies });\n  }\n  container.register(_e);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport * as __au2ViewDef from './my-app.html';\nimport { customElement } from '@aurelia/runtime-html';\nimport { StateService } from \"./state-service\";\nlet MyApp = class MyApp {\n    constructor(state) {\n        this.state = state;\n    }\n};\nMyApp.inject = [StateService];\nMyApp = __decorate([\n    customElement(__au2ViewDef),\n    __metadata(\"design:paramtypes\", [StateService])\n], MyApp);\nexport { MyApp };\n","import { StateService } from \"./state-service\";\n\nexport class MyApp {\n  public static readonly inject = [StateService];\n  public state: StateService;\n  constructor(state: StateService) {\n    this.state = state;\n  }\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nexport class Factor {\n}\n// hqc food = hq food * 10\n// hqc wood = hq wood * 10\nFactor.dayProduceDefault = 1;\nFactor.farmerMaxFromFarm = 2;\nFactor.foodConsumeFromPopulation = 1;\nFactor.foodProduceFromFarmer = 4;\nFactor.populationMaxFromHouse = 2;\nFactor.populationProduceDefault = 1;\nFactor.woodProduceFromLogger = 5;\nexport class State {\n    constructor() {\n        this.resources = [];\n        this.recursiveResources = [];\n        this.reset();\n    }\n    reset() { }\n    delta(resource) {\n        var _a, _b;\n        const produceKey = `${resource}Produce`;\n        const produce = (_a = this[produceKey]) !== null && _a !== void 0 ? _a : 0;\n        const consumeKey = `${resource}Consume`;\n        const consume = (_b = this[consumeKey]) !== null && _b !== void 0 ? _b : 0;\n        return produce - consume;\n    }\n    update(resource) {\n        var _a, _b;\n        const maxKey = `${resource}Max`;\n        const max = (_a = this[maxKey]) !== null && _a !== void 0 ? _a : Infinity;\n        const minKey = `${resource}Min`;\n        const min = (_b = this[minKey]) !== null && _b !== void 0 ? _b : 0;\n        const newValue = this[resource] + this.delta(resource);\n        this[resource] = Math.max(Math.min(newValue, max), min);\n    }\n    turn() {\n        this.resources.forEach((resource) => this.update(resource));\n        this.recursiveResources.forEach((recursiveResource) => this[recursiveResource].forEach((resource) => resource.turn()));\n    }\n    initResource(resource, init = {}) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        const valueKey = resource;\n        const valueKeyDefault = `${resource}Default`;\n        const produceKey = `${resource}Produce`;\n        const produceKeyDefault = `${resource}ProduceDefault`;\n        const consumeKey = `${resource}Consume`;\n        const consumeKeyDefault = `${resource}ConsumeDefault`;\n        const maxKey = `${resource}Max`;\n        const maxKeyDefault = `${resource}MaxDefault`;\n        const minKey = `${resource}Min`;\n        const minKeyDefault = `${resource}MinDefault`;\n        const deltaKey = `${resource}Delta`;\n        const hasGetter = (key) => { var _a; return !!((_a = Object.getOwnPropertyDescriptor(this['__proto__'], key)) === null || _a === void 0 ? void 0 : _a.get); };\n        if (!hasGetter(valueKey)) {\n            this[valueKey] = (_b = (_a = init.value) !== null && _a !== void 0 ? _a : Factor[valueKeyDefault]) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!hasGetter(produceKey)) {\n            this[produceKey] = (_d = (_c = init.produce) !== null && _c !== void 0 ? _c : Factor[produceKeyDefault]) !== null && _d !== void 0 ? _d : 0;\n        }\n        if (!hasGetter(consumeKey)) {\n            this[consumeKey] = (_f = (_e = init.consume) !== null && _e !== void 0 ? _e : Factor[consumeKeyDefault]) !== null && _f !== void 0 ? _f : 0;\n        }\n        if (!hasGetter(maxKey)) {\n            this[maxKey] = (_h = (_g = init.max) !== null && _g !== void 0 ? _g : Factor[maxKeyDefault]) !== null && _h !== void 0 ? _h : Infinity;\n        }\n        if (!hasGetter(minKey)) {\n            this[minKey] = (_k = (_j = init.min) !== null && _j !== void 0 ? _j : Factor[minKeyDefault]) !== null && _k !== void 0 ? _k : 0;\n        }\n        if (!hasGetter(deltaKey)) {\n            Object.defineProperty(this['__proto__'], deltaKey, {\n                get: () => this.delta(resource),\n            });\n        }\n    }\n}\nexport class StateService extends State {\n    constructor() {\n        super(...arguments);\n        this.dayProduce = Factor.dayProduceDefault;\n        this.resources = ['day', 'food', 'wood'];\n        this.recursiveResources = ['base'];\n    }\n    reset() {\n        this.bases = [new Base(this, { enabled: true })];\n        this.initResource('day');\n        this.initResource('food', { value: 3000, max: 3000 });\n        this.initResource('wood', { max: 1500 });\n    }\n    get base() {\n        return this.bases.filter((base) => base.enabled);\n    }\n    sumFromBase(mapper) {\n        return this.base.map(mapper).reduce((sum, current) => sum + current, 0);\n    }\n    get population() {\n        return this.sumFromBase((base) => base.population);\n    }\n    get foodConsume() {\n        return this.population * Factor.foodConsumeFromPopulation;\n    }\n    get logger() {\n        return this.sumFromBase((base) => base.logger);\n    }\n    get woodProduce() {\n        return this.logger * Factor.woodProduceFromLogger;\n    }\n    get farmer() {\n        return this.sumFromBase((base) => base.farmer);\n    }\n    get foodProduce() {\n        return this.farmer * Factor.foodProduceFromFarmer;\n    }\n}\nexport class Base extends State {\n    constructor(state, _a) {\n        var { enabled = false, farm = 0, farmer = 0, house = 1, population = 1, logger = 0, loggerMax = 30 } = _a, initState = __rest(_a, [\"enabled\", \"farm\", \"farmer\", \"house\", \"population\", \"logger\", \"loggerMax\"]);\n        super();\n        this.resources = ['population'];\n        this.state = state;\n        this.enabled = enabled;\n        this.initResource('farm', { value: farm });\n        this.initResource('farmer', { value: farmer });\n        this.initResource('house', { value: house });\n        this.initResource('population', { value: population });\n        this.initResource('logger', { value: logger, max: loggerMax });\n        this.initResource('worker');\n    }\n    get populationMax() {\n        return this.house * Factor.populationMaxFromHouse;\n    }\n    get populationProduce() {\n        if (this.state.food > this.state.foodMin) {\n            return Factor.populationProduceDefault;\n        }\n        return 0;\n    }\n    get populationFull() {\n        if (this.populationProduce > 0 && this.population < this.populationMax) {\n            return Math.ceil((this.populationMax - this.population) / this.populationProduce);\n        }\n    }\n    get worker() {\n        return this.population - this.farmer - this.logger;\n    }\n    get farmerMax() {\n        return this.farm * Factor.farmerMaxFromFarm;\n    }\n    assign(job) {\n        if (this.worker > this.workerMin && this[job] < this[`${job}Max`]) {\n            this[job]++;\n            return true;\n        }\n        return false;\n    }\n    unassign(job) {\n        if (this[job] >= this[`${job}Min`]) {\n            this[job]--;\n            return true;\n        }\n        return false;\n    }\n}\n","export type Resource = 'day' | 'farm' | 'farmer' | 'food' | 'house' | 'logger' | 'population' | 'wood' | 'worker';\nexport type RecursiveResource = 'base';\nexport type Job = 'farmer' | 'logger' | 'worker';\n\nexport class Factor {\n  // hqc food = hq food * 10\n  // hqc wood = hq wood * 10\n  static dayProduceDefault = 1;\n  static farmerMaxFromFarm = 2;\n  static foodConsumeFromPopulation = 1;\n  static foodProduceFromFarmer = 4;\n  static populationMaxFromHouse = 2;\n  static populationProduceDefault = 1;\n  static woodProduceFromLogger = 5;\n}\n\nexport class State {\n  resources: Resource[] = [];\n  recursiveResources: RecursiveResource[] = [];\n\n  constructor() {\n    this.reset();\n  }\n\n  reset(): void {}\n\n  delta(resource: Resource): number {\n    const produceKey = `${resource}Produce`;\n    const produce = this[produceKey] ?? 0;\n\n    const consumeKey = `${resource}Consume`;\n    const consume = this[consumeKey] ?? 0;\n\n    return produce - consume;\n  }\n\n  update(resource: Resource): void {\n    const maxKey = `${resource}Max`;\n    const max = this[maxKey] ?? Infinity;\n\n    const minKey = `${resource}Min`;\n    const min = this[minKey] ?? 0;\n\n    const newValue = this[resource] + this.delta(resource);\n    this[resource] = Math.max(Math.min(newValue, max), min);\n  }\n\n  turn(): void {\n    this.resources.forEach((resource) => this.update(resource));\n    this.recursiveResources.forEach((recursiveResource) => this[recursiveResource].forEach((resource: State) => resource.turn()));\n  }\n\n  initResource(resource: Resource, init: { value?; produce?; consume?; max?; min? } = {}): void {\n    const valueKey = resource;\n    const valueKeyDefault = `${resource}Default`;\n    const produceKey = `${resource}Produce`;\n    const produceKeyDefault = `${resource}ProduceDefault`;\n    const consumeKey = `${resource}Consume`;\n    const consumeKeyDefault = `${resource}ConsumeDefault`;\n    const maxKey = `${resource}Max`;\n    const maxKeyDefault = `${resource}MaxDefault`;\n    const minKey = `${resource}Min`;\n    const minKeyDefault = `${resource}MinDefault`;\n    const deltaKey = `${resource}Delta`;\n    const hasGetter = (key) => !!Object.getOwnPropertyDescriptor(this['__proto__'], key)?.get;\n\n    if (!hasGetter(valueKey)) {\n      this[valueKey] = init.value ?? Factor[valueKeyDefault] ?? 0;\n    }\n    if (!hasGetter(produceKey)) {\n      this[produceKey] = init.produce ?? Factor[produceKeyDefault] ?? 0;\n    }\n    if (!hasGetter(consumeKey)) {\n      this[consumeKey] = init.consume ?? Factor[consumeKeyDefault] ?? 0;\n    }\n    if (!hasGetter(maxKey)) {\n      this[maxKey] = init.max ?? Factor[maxKeyDefault] ?? Infinity;\n    }\n    if (!hasGetter(minKey)) {\n      this[minKey] = init.min ?? Factor[minKeyDefault] ?? 0;\n    }\n    if (!hasGetter(deltaKey)) {\n      Object.defineProperty(this['__proto__'], deltaKey, {\n        get: () => this.delta(resource),\n      });\n    }\n  }\n}\nexport class StateService extends State {\n  bases: Base[];\n  day: number;\n  dayProduce = Factor.dayProduceDefault;\n  food: number;\n  foodMax: number;\n  foodMin: number;\n  wood: number;\n\n  resources: Resource[] = ['day', 'food', 'wood'];\n  recursiveResources: RecursiveResource[] = ['base'];\n\n  reset(): void {\n    this.bases = [new Base(this, { enabled: true })];\n    this.initResource('day');\n    this.initResource('food', { value: 3000, max: 3000 });\n    this.initResource('wood', { max: 1500 });\n  }\n\n  get base(): Base[] {\n    return this.bases.filter((base) => base.enabled);\n  }\n\n  sumFromBase(mapper: (base: Base) => number): number {\n    return this.base.map(mapper).reduce((sum, current) => sum + current, 0);\n  }\n\n  get population(): number {\n    return this.sumFromBase((base) => base.population);\n  }\n\n  get foodConsume(): number {\n    return this.population * Factor.foodConsumeFromPopulation;\n  }\n\n  get logger(): number {\n    return this.sumFromBase((base) => base.logger);\n  }\n\n  get woodProduce(): number {\n    return this.logger * Factor.woodProduceFromLogger;\n  }\n\n  get farmer(): number {\n    return this.sumFromBase((base) => base.farmer);\n  }\n\n  get foodProduce(): number {\n    return this.farmer * Factor.foodProduceFromFarmer;\n  }\n}\n\nexport class Base extends State {\n  enabled: boolean;\n  population: number;\n  farm: number;\n  farmer: number;\n  house: number;\n  logger: number;\n  loggerMax: number;\n  workerMin: number;\n  state: StateService;\n  resources: Resource[] = ['population'];\n\n  constructor(state: StateService, { enabled = false, farm = 0, farmer = 0, house = 1, population = 1, logger = 0, loggerMax = 30, ...initState }) {\n    super();\n\n    this.state = state;\n\n    this.enabled = enabled;\n    this.initResource('farm', { value: farm });\n    this.initResource('farmer', { value: farmer });\n    this.initResource('house', { value: house });\n    this.initResource('population', { value: population });\n    this.initResource('logger', { value: logger, max: loggerMax });\n    this.initResource('worker');\n  }\n\n  get populationMax(): number {\n    return this.house * Factor.populationMaxFromHouse;\n  }\n\n  get populationProduce(): number {\n    if (this.state.food > this.state.foodMin) {\n      return Factor.populationProduceDefault\n    }\n    return 0\n  }\n\n  get populationFull(): number | undefined {\n    if (this.populationProduce > 0 && this.population < this.populationMax) {\n      return Math.ceil((this.populationMax - this.population) / this.populationProduce);\n    }\n  }\n\n  get worker(): number {\n    return this.population - this.farmer - this.logger;\n  }\n\n  get farmerMax(): number {\n    return this.farm * Factor.farmerMaxFromFarm;\n  }\n\n  assign(job): boolean {\n    if (this.worker > this.workerMin && this[job] < this[`${job}Max`]) {\n      this[job]++;\n      return true;\n    }\n    return false;\n  }\n\n  unassign(job): boolean {\n    if (this[job] >= this[`${job}Min`]) {\n      this[job]--;\n      return true;\n    }\n    return false;\n  }\n\n  /*\n    let price = {};\n    if (building === 'farm') {\n      // TODO: build time 20 days\n      price = {\n        wood: [200, 300, 450, 650, 1000],\n      };\n    }\n    if (building === 'house') {\n      // TODO: build time 20 days\n      price = {\n        wood: [100, 100, 150, 150, 200, 250],\n        stone: [100, 100, 150, 150, 200, 250],\n      };\n    }\n  */\n}\n","import { CustomElement } from '@aurelia/runtime-html';\nexport const name = \"treasury-page\";\nexport const template = \"<section>\\n  <table>\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">resource</th>\\n        <th scope=\\\"col\\\">value</th>\\n        <th scope=\\\"col\\\">min</th>\\n        <th scope=\\\"col\\\">max</th>\\n        <th scope=\\\"col\\\">produce</th>\\n        <th scope=\\\"col\\\">consume</th>\\n        <th scope=\\\"col\\\">delta</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr>\\n        <th scope=\\\"row\\\">day</th>\\n        <td><code>${state.day}</code></td>\\n        <td><code>${state.dayMin}</code></td>\\n        <td><code>${state.dayMax}</code></td>\\n        <td><code>${state.dayProduce}</code></td>\\n        <td><code>${state.dayConsume}</code></td>\\n        <td><code>${state.dayDelta}</code></td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">food</th>\\n        <td><code>${state.food}</code></td>\\n        <td><code>${state.foodMin}</code></td>\\n        <td><code>${state.foodMax}</code></td>\\n        <td><code>${state.foodProduce}</code></td>\\n        <td><code>${state.foodConsume}</code></td>\\n        <td><code>${state.foodDelta}</code></td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">wood</th>\\n        <td><code>${state.wood}</code></td>\\n        <td><code>${state.woodMin}</code></td>\\n        <td><code>${state.woodMax}</code></td>\\n        <td><code>${state.woodProduce}</code></td>\\n        <td><code>${state.woodConsume}</code></td>\\n        <td><code>${state.woodDelta}</code></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</section>\\n\";\nexport default template;\nexport const dependencies = [  ];\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies });\n  }\n  container.register(_e);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport * as __au2ViewDef from './treasury-page.html';\nimport { customElement } from '@aurelia/runtime-html';\nimport { StateService } from \"./state-service\";\nlet TreasuryPage = class TreasuryPage {\n    constructor(state) {\n        this.state = state;\n    }\n};\nTreasuryPage.inject = [StateService];\nTreasuryPage = __decorate([\n    customElement(__au2ViewDef),\n    __metadata(\"design:paramtypes\", [StateService])\n], TreasuryPage);\nexport { TreasuryPage };\n","import { StateService } from \"./state-service\";\n\nexport class TreasuryPage {\n  public static readonly inject = [StateService];\n  public state: StateService;\n  constructor(state: StateService) {\n    this.state = state;\n  }\n}\n","import { CustomElement } from '@aurelia/runtime-html';\nimport * as d0 from \"./base-worker-page\";\nimport * as d1 from \"./missing-page\";\nexport const name = \"worker-page\";\nexport const template = \"\\n\\n\\n<nav>\\n  <a load=\\\"base-worker-page(id=0)\\\">base.0</a>\\n</nav>\\n\\n<au-viewport default=\\\"base-worker-page(id=0)\\\" fallback=\\\"missing-page\\\"></au-viewport>\\n\";\nexport default template;\nexport const dependencies = [ d0, d1 ];\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies });\n  }\n  container.register(_e);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport * as __au2ViewDef from './worker-page.html';\nimport { customElement } from '@aurelia/runtime-html';\nimport { StateService } from \"./state-service\";\nlet WorkerPage = class WorkerPage {\n    constructor(state) {\n        this.state = state;\n    }\n};\nWorkerPage.inject = [StateService];\nWorkerPage = __decorate([\n    customElement(__au2ViewDef),\n    __metadata(\"design:paramtypes\", [StateService])\n], WorkerPage);\nexport { WorkerPage };\n","import { StateService } from \"./state-service\";\n\nexport class WorkerPage {\n  public static readonly inject = [StateService];\n  public state: StateService;\n  constructor(state: StateService) {\n    this.state = state;\n  }\n}\n"],"sourceRoot":"../"}